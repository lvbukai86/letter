{"mappings":"AAAA,KAAK,CAAC,SAAS,GAAC,CAAC,CAAC,CAAW;AAC7B,KAAK,CAAC,OAAO,GAAE,CAAC,CAAC,CAAO;AACxB,KAAK,CAAC,CAAC,GAAC,YAAY,CAAC,OAAO,CAAC,CAAG;AAChC,KAAK,CAAC,OAAO,GAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1B,KAAK,CAAC,OAAO,GAAE,OAAO,IAAI,CAAC;IACvB,CAAC;QAAA,IAAI,EAAC,CAAG;QAAC,GAAG,EAAC,CAAsB;IAAA,CAAC;IACrC,CAAC;QAAA,IAAI,EAAC,CAAG;QAAC,GAAG,EAAC,CAA0B;IAAA,CAAC;AAC7C,CAAC;AACD,OAAO,CAAC,GAAG,CAAC,OAAO;AACnB,KAAK,CAAC,WAAW,IAAI,GAAG,GAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAU,WAAE,CAAE,GAC9B,OAAO,CAAC,CAAS,UAAE,CAAE,GACrB,OAAO,CAAC,CAAM,OAAE,CAAE,GAClB,OAAO,SAAS,CAAE,EAAE,CAAa,AAAb,EAA2B,AAA3B,yBAA2B;;AACtC,CAAb;AAEH,KAAK,CAAC,MAAM,OAAM,CAAC;IACf,EAA0C,AAA1C,wCAA0C;IAC1C,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,GAAK,CAAC;QAC9B,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,gEAEO,EAAE,IAAI,CAAC,IAAI,CAAC,qCACZ,EAAE,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,mMAOzC,GAAG,YAAY,CAAC,OAAO;IAE5B,CAAC;AACD,CAAC;AACD,MAAM;AAGd,CAAC,CAAC,CAAY,aAAE,EAAE,CAAC,CAAO,YAAK,CAAC;IAC5B,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAe;IACvC,EAAE,EAAC,GAAG,CAAC,OAAO,CAAC,CAAM,UAAG,CAAC,EACrB,GAAG,GAAC,CAAU,YAAC,GAAG;IAEtB,OAAO,CAAC,IAAI,CAAC,CAAC;QACV,IAAI,EAAE,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,WAAW;QACrC,GAAG,EAAE,GAAG;IACV,CAAC;IACD,MAAM;AACZ,CAAC;AACD,MAAM,CAAC,cAAc,OAAS,CAAC;IAC3B,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO;IACrC,YAAY,CAAC,OAAO,CAAC,CAAG,IAAE,MAAM;AAClC,CAAC;AACD,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAU,YAAG,CAAC,GAAK,CAAC;IACjC,KAAK,CAAC,CAAC,CAAA,GAAG,EAAA,CAAC,GAAG,CAAC;IACf,GAAG,CAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GACnC,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,OAAO,GAAG,EACvC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG;AAGhC,CAAC","sources":["src/main.js"],"sourcesContent":["const $siteList=$('.siteList');\nconst $lastLi =$('.lost');\nconst x=localStorage.getItem('x');\nconst xObject=JSON.parse(x);\nconst hashMap= xObject || [\n    {logo:\"A\",url:\"https://www.acfun.cn\"},\n    {logo:\"B\",url:\"https://www.bilibili.com\"}\n]\nconsole.log(hashMap)\nconst simplifyUrl = (url) => {\n    return url.replace('https://', '')\n      .replace('http://', '')\n      .replace('www.', '')\n      .replace(/\\/.*/, '') // 删除 / 开头的内容\n  }\n\nconst render=() =>{\n    //$siteList.find('li:not(.last)').remove()\n    hashMap.forEach((node, index) => {\n        const $li = $(`<li>\n          <div class=\"site\">\n            <div class=\"logo\">${node.logo}</div>\n            <div class=\"link\">${simplifyUrl(node.url)}</div>\n            <div class=\"close\">\n              <svg class=\"icon\">\n                <use xlink:href=\"#icon-close\"></use>\n              </svg>\n            </div>\n          </div>\n        </li>`).insertBefore($lastLi)\n       \n        })\n        }\n        render();\n\n\n$('.addButton').on('click',()=>{\n    let url = window.prompt('请问你要添加的网站是什么?')\n    if(url.indexOf('http')!=0){\n        url='https://'+url\n    }\n    hashMap.push({\n        logo: simplifyUrl(url)[0].toUpperCase(),\n        url: url\n      })\n      render()\n})\nwindow.onbeforeunload = () => {\n    const string = JSON.stringify(hashMap)\n    localStorage.setItem('x', string)\n  }\n  $(document).on('keypress', (e) => {\n    const {key} = e\n    for (let i = 0; i < hashMap.length; i++) {\n      if (hashMap[i].logo.toLowerCase() === key) {\n        window.open(hashMap[i].url)\n      }\n    }\n  })"],"names":[],"version":3,"file":"index.65c7a1e5.js.map","sourceRoot":"/__parcel_source_root/"}